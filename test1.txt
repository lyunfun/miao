大喵教育前端培训
================

## 阶段性测试 2019.12.06

### 大喵教育版权所有，请勿泄漏



01. 列出至少 7 个常用 Linux 命令及其基本使用方法
  * ls — List
  * cd — Change Directory
  * cat— concatenate and print files
  * rmdir— Remove Directory
  * pwd — Print Working Directory
  * rm— Remove
  * ping-  ping test
  * cp— Copy

02. 什么是 html 实体？常见 html 实体有哪些？
html实体是以&开头以;结尾的字符串，可以用来表示任意字符串，主要用来表示不能明文出现在代码里的拥有特殊的含义的字符，比如回车，引号，<>号等
  * &amp; &符
  * &copy; 版权符
  * &lt; 小于号
  * &gt; 大于号
  * &quot; 双引号
  * &apos; 单引号
  * &nbsp; non-breaking space

03. 计算机为什么使用二进制？
  * 二进制足够简单，足够使用

04. 什么是 Unicode？如何表示，有什么作用？最通用的 Unicode 实现是？
  * Unicode是电脑科学领域里的一项业界标准字符编码。它对世界上大部分的文字系统进行了整理、编码，使得电脑可以用更为简单的方式来呈现和处理文字。
  * 在表示一个 Unicode 的字元时，通常会用“U+”然后紧接着一组十六进位的数字来表示这一个字元。
  * Unicode 的实现方式称为 Unicode转换格式（Unicode Transformation Format，简称为 UTF）。
  * 作用：解决了传统的字元编码方案在不同国家间出现不相容的情况，可以实现支援多语言环境（指可同时处理多种语言混合的情况）
  * 目前通用的实现方式是 UTF-16 小端序（LE）、UTF-16 大端序（BE）和 UTF-8。



05. 什么是 GUI，什么是 CLI，什么是接口/界面？现实生活中有哪些例子？
  * GUI - Graphics User Interface，图形化用户界面/接口
  * CLI - Command Line Interface，命令行界面
  * 界面、用户界面（User Interface，简称UI）是系统和用户之间进行交互和信息交换的媒介，它实现信息的内部形式与人类可以接受形式之间的转换。
  * 例子：电脑画面上显示窗口、图标、按钮等图形表示不同目的的动作，用户通过滑鼠等指针设备进行操作选择；银行取款机的触控屏显示按钮、信息，用户通过点击输入进行取钱。

06. 在什么情况下 html 标签可以不需要闭合？
  * 没有任何内容的void元素，只有一个开始标签，属于自闭合标签如 <br> 、<img>

07. 在一些情况下某些非自闭合标签的结束标签可以省略的原因是什么？
  * 没有任何内容的void元素，只有一个开始标签，属于自闭合标签 如 <br> 、<img>

08. 什么是费茨定律？它有哪些应用？
  * 费茨定律 是一个人机交互以及人体工程学中人类活动的模型，它预测了快速移动到目标区域所需的时间是目标区域的距离和目标区域的大小的函数。
  * 费茨法则多用于表现 指、点 这个动作的概念模型，无论是用手或者手指进行物理接触，抑或是在电脑屏幕上用假想的设备（例如鼠标）进行虚拟的触碰。通过费茨定律我们可以看出，小并且/或者远的目标，需要更长的时间才能得以准确到达，这便是权衡指的动作的 速度的准确性。

09. 为什么英文很重要？
  * 英语是当今世界上主要的国际通用语言
  * 英语的使用范围非常广泛,全世界75％的电视节目是英语，四分之三的邮件是用英语书写，互联网上的信息也以英语为主。

10. 将二进制 `10010` 数转换为十进制数
  * 10010（2）= 1x2^4 + 0x2^3 + 0x2^2 + 1x 2^1 + 0x2^0
              = 18（10）

11. 将十六进制数 `ABCDEF` 转换为十进制数
  * ABCDEF(16) = 11259375(10)

12. 将十进制数 `435` 分别转换成二进制数和十六进制数
  * 435(10) = 110110011(2)
  * 435(10) = 1B3

13. 列出 HTML 中常见的全局属性
  * id；name; title; class; data-*

14. 什么是操作系统的路径（Path）？它的作用及应用场景是？
  * path它是一个列表，每一项是一个【文件夹的完整/绝对路径】
  * 作用及应用：win-run等 通过把应用程序的路径加入到PATH变量中，在windows下我们可以直接用命令行来运行一个程序。

15. 什么是文本文件？什么是二进制文件？它们最明显的区别是？
  * 文本文件一般指只有字符原生编码构成的二进制计算机文件，与富文本相比，其不包含字样样式的控制元素，能够被最简单的文本编辑器直接读取。
  * 二进制文件（英语：Binary file）一般指包含ASCII及扩展ASCII字符中编写的数据或程序指令（Program instructions）的文件。
  * 文件实际上包括两部分，控制信息和内容信息。纯文本没有控制格式信息。文本文件是特殊的二进制文件，是因为文本文件实际上的解释格式已经确定了：ASCII或者unicode编码。

16. 为什么说 html 与数学公式有诸多相似之处？
  * html 元素的嵌套规则与数学公式里的加减乘除括号等运算一模一样，树状（递归）结构相似

17. 几种常见图片格式有什么区别和特点？
  * jpg jpeg
    * 有损压缩，压缩率很高，一般能够压缩到原始数据的十分之一
    * 质量越低，体积越小
    * 适合现实社会的照片和其他复杂图像
  * png
    * 无损压缩
    * 适合存储大片完全相同颜色的图片，如logo和其他包含单一色、线条或文本的简单图片
    * 不适合用来保存照片
    * 支持透明色（Alpha通道）
  * gif
    * 动图
    * 适合存储大片完全相同颜色的图片，如logo和其他包含单一色、线条或文本的简单图片
    * 无损压缩(原始图片颜色数量不足256时)
  * bmp bit map 位图
    * 无压缩，无损
    * 每个点占三个字节（取决于具体保存的格式：1670w色/24位，单色/1bit，256色/8bit，65536色/16bit）
    * 体积巨大
    * 不适合放在网页
  * psd
    * 保存了Photoshop在构造这张图片的过程中的所有信息
  * webp
    * 有损压缩
    * 各方面都胜过jpg
    * 适合在移动端使用

18. `data-*` 属性一般是用来干嘛？
  * data-*是一类被称为自定义数据属性的属性，它赋予我们在所有 HTML 元素上嵌入自定义数据属性的能力，并可以通过脚本(一般指JavaScript) 与 HTML 之间进行专有数据的交换。通过添加 data-* 属性，即使是普通的 HTML 元素也能变成相当复杂且强大的编程对象。


19. 用什么方法扩大一个 checkbox 的可点击区域？
  * 添加<label>元素与checkbox复选框关联之后，可以起到触发开关的作用。

20. 什么是 MIME Type？
  * 媒体类型（通常称为 Multipurpose Internet Mail Extensions 或 MIME 类型 ）是一种标准，用来表示文档、文件或字节流的性质和格式。
  * 浏览器通常使用MIME类型（而不是文件扩展名）来确定如何处理URL，因此Web服务器在响应头中添加正确的MIME类型非常重要。如果配置不正确，浏览器可能会曲解文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。

21. 哪些标签可以使用 target 属性？哪些标签可以使用 href 属性？
  * <a> <link> <form> 可以使用target 属性
  * <a> <link> 可以使用href 属性

22. 什么是 BOM 头？
  * 在utf-8编码文件中BOM在文件头部，占用三个字节，用来标示该文件属于utf-8编码

23. group 类型的标签有哪些？
  * <hgroup> <optgroup> <colgroup>

24. 什么是 SEO？
  * 搜寻引擎最佳化（search engine optimization，缩写为SEO），是一种透过了解搜寻引擎的运作规则来调整网站，以及提高目的网站在有关搜寻引擎内排名的方式。

25. 分别列出每种常见浏览器的内核名称（自己查）。
  * Safari -> webkit
  * Chrome -> Chromium
  * Firefox -> Gecko
  * Opera -> webkit
  * IE -> Trident
  * Edge -> EdgeHTML
  * 微信浏览器 -> webkit修改版（x5）

26. 列表类标签有哪些？分别如何使用？需要注意些什么？
  * <table> 每一个表格的内容都包含在这两个标签中 : <table></table>.
  * <tr> 使用 <tr> 元素 ('tr' 代表 'table row')，增加表格的行
  * <td> 在表格中，最小的内容容器是单元格, 是通过 <td> 元素创建的
  * <thead> 需要嵌套在 table 元素中，放置在头部的位置
  * <tbody> 需要嵌套在 table 元素中，放置在 <thead>的下面或者是 <tfoot> 的下面，<tbody> 总是包含在每个表中，如果你没有在代码中指定它，那就是隐式的。
  * <tfoot> 需要嵌套在 table 元素中，放置在底部 (页脚)的位置，一般是最后一行，往往是对前面所有行的总结
  * <th> 表格中的标题是特殊的单元格，通常在行或列的开始处，定义行或列包含的数据类型， <th> 元素 ('th' 代表 'table header')将表格的标题在视觉上和语义上都能被识别为标题。即使你不给表格添加你自己的样式，表格标题也会带有一些默认样式：加粗和居中，让标题可以突出显示。
  * <col> 定义表格中的列，并用于定义所有公共单元格上的公共语义。它通常位于<colgroup>元素内。
  * <colgroup> 表格列组（Column Group <colgroup>） 标签用来定义表中的一组列表。
  * <caption> 为表格增加一个标题

28. 为什么不同类型的标签的 fallback 内容要以不同的形式提供？
  * 防止有时候用户的浏览器并不一定支持指定的标签内容，这时可以指定退化（fallback）方案，来支持页面的功能实现。

29. 分别写出在 head 中设定页面编码，设定 icon，引入样式表的标签
  * head 中设定页面编码 <meta charset="UTF-8">
  * 设定 icon <link rel="shortcut icon" href="1.ico" type="image/x-icon">
  * 引入样式表 <link rel="stylesheet" href="/html/csstest1.css" >

30. 什么叫做可访问性，html 中为此做了什么工作？
  * 可访问性：尽可能多的人使用你的网站——我们传统上认为这是关于残疾人的，但实际上它也涵盖了其他群体，比如使用移动设备的人群，那些网络连接缓慢的人群。
  * 尽可能地用正确的HTML标签来表达正确的意图，使用语义化的HTML(这将提高可访问性)也提高了搜索引擎优化，使你的网站更容易被人获得。
    * 文本内容
      拥有标题，段落，列表等内容的良好结构，便于屏幕阅读器用户获取页面信息。
    * 页面布局
      使用更现代化的页面布局结构，使用HTML5语义元素，为屏幕阅读器（和其他工具）提供额外的语义，为用户提供有关他们正在浏览的内容的额外信息
    * UI 控制
      重新建立键盘的可访问性，使用有意义的文字标签

31. 写出以下几个符号的 ascii 码：`a，A，0，CR，LF，空格，NBSP`。
  * a 97
  * A 65
  * 0 48
  * CR 13
  * LF 10
  * 空格 32
  * NBSP 255

32. 中英互翻
    * geek 极客
    * nerd 怪胎 书呆子
    * hacker 骇客
    * edge 尖端
    * bleeding/cutting edge 前沿/尖端/可能存在风险的技术
    * HTML 实体 HTML entity
    * coordinate 坐标
    * polygon 多边形
    * bit 比特
    * byte 字节
    * alternative 可替代的
    * 属性 attribute
    * obsolate 作废的
    * 二进制 binary
    * 十进制 decimal
    * 十六进制 hexadecimal
    * octal 八进制
    * deprecate 弃用
    * loop 循环
    * 行 row
    * 列 column (col)
    * horizontal 水平线
    * 语义化 semantic
    * 可访问性 accessibility


33. 用文字描述如下选择器将选择哪些（个）元素
  ```css
  div, h1 {} 选择了 <div> 和 <h1> 2个元素
  div[class] [id="abc"] {} 选择了同时有 class 属性和 id="abc" 的 div 元素
  div:hover ul li > div {} 选择了 div hover 时 ul 里的 li 元素的直接子元素为 div 的元素
  body :active {} 选择了 active 状态的 body 元素
  div:hover::after {} 选择了 div hover 时 div 的最后一个子元素
  ::selection {} 选择了 唯一的页面元素(目标元素)
  :target {} 选择了 一个唯一的页面元素(目标元素)，其id 与当前URL片段匹配
  input + ul + p ~ span {} 选择了 input 和 ul 和 p 后面直接跟着的 span 元素
  ```

34. 分别写出如下几个选择器的优先级
    ```css
    * * * {} （0，0，0，3）
    div * span {} (1,0,0,2)
    div[title] {} （0,0,1,1）
    fieldset legend + input {} (0,0,0,3)
    #some #thing .not:hover .abc:hover {} (0,2,4,0)
    ```

35. `em,px,rem,vw,vh` 分别代表多长？
  * em = 希望得到的像素大小 / 父元素字体像素大小 【当前元素】font-size的大小
  * px 不是一个绝对长度单位，但在设计中，大多数时候被认为是绝对长度
  * rem root element's em html 元素（根元素）的字号
  * vw/vh 1vw 视口宽度的100之一;1vh 视口高度的100之一

36. 显示器的物理分辨率为 `1920x1080`，操作系统设置的分辨率为 `1280x720`，网页的放大倍数为 `110%`，请计算一个 CSS 像素对应多少个显示器物理像素（面积与长度）？
  * 2个
37. 写出如下代码显示在浏览器后**每个单词**的字号
    ```html
    <style>
      html {
        font-size: 20px;
      }
      section {
        font-size: 10rem;
      }
      p {
        font-size: 24px;
      }
      span {
        font-size: 150%;
      }
      .sucks {
        font-size: inherit;
      }
    </style>
    <body>
      <section>
        <h2>Brown</h2>
        <p>quick</p>
        <p>jumps <span>over <span>lazy</span> dog</span></p>
        <p class="sucks">sucks</p>
      </section>
    </body>
    ```
  * Brown 的字号：200px
  * quick 的字号：24px
  * jumps 的字号：24px
  * over 的字号：36px
  * lazy 的字号：54px
  * dog 的字号：36px
  * sucks 的字号：200px

38. 如何给css添加注释
  *       /* 这是一行CSS注释 */

39. 指出如下css代码中的错误
    ```
    p,h1,{

        background-color: rgba:(abc)    /* rgba(abc)； 应去掉冒号并加上分号*/
        font-varient; abc;              /* 应写为font-varient： abc;*/
        colr: #ff048;                  /* color属性拼写错误 */
        font: "serif" 25px;           /* 应去掉 "" */
    }
    ```

40. 写出如下结构中div元素的所有后代/祖先/子/父/兄弟元素
    ```html
    <section>
      <h1><span></span></h1>
      <main>
        <h2></h2>
        <div>
          <ul>
            <li><a href=""><img src="" alt=""></a></li>
          </ul>
        </div>
        <aside>
          <h3></h3>
        </aside>
      </main>
    </section>
    ```
  * div元素的后代：<ul> <li>
  * div元素的祖先：<main> <section>
  * div元素的子元素：<ul>
  * div元素的父元素: <main>
  * div元素的兄弟元素: <h2> <aside>

41. 常见的替换元素有哪些？它们与非替换元素最大的区别什么？
  * 常见的替换元素有：<img> <video> <embed> <iframe>
  * 替换元素与非替换元素最大的区别:可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。它们的内容不受当前文档的样式的影响。CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容。非替换元素的内容不受当前文档的样式的影响。

42. 让 CSS 在 HTML 页面上生效有哪些方法，分别写出来。
  * 外部样式表 将外部样式表链接到页面。这是将css附加到文档中的最常见和最有用的方法
    <link rel="stylesheet" href="styles.css">
  * 内部样式表 内部样式表是您没有外部CSS文件的地方，而是将CSS放在<style>HTML 内包含的元素中<head>。
    <style>
      h1 {
        color: blue;
        background-color: yellow;
        border: 1px solid black;
      }
    </style>
  * 内联样式 内联样式是CSS声明，仅影响一个元素，包含在style属性中：
    <h1 style="color: blue;background-color: yellow;border: 1px solid black;">Hello World!</h1>
    <p style="color:red;">This is my first CSS example</p>
  * DOM
    el.style.color = 'red'

43. 如何让页面打印时应用不同的效果？
  * 通过设置单独的CSS文件, 设置link的 media="print" 属性来指定此样式专用于打印：
    <link rel="stylesheet" href="print.css" media="print">
  * 或者通过指令由打印继承默认样式;仅对不同的需要加以限定。
    /* 样式将只应用于打印 */
    @media print {
                    body {
                            color: #000;
                            background: #fff;
                        }
                  }

44. 假设 index.html 的路径为 http://user.coding.me/task/index.html ，如下引用的a.css和b.css路径分别为？
    ```html
    <!-- index.html的内容 -->
    <style>
        @import "../a.css";
    </style>
    ```
    ```css
    /* a.css的内容 */
    @import "b.css";
    ```
  * a.css 的路径：http://user.coding.me/task/
  * b.css 的路径：http://user.coding.me/task/a.css

45. 写出满足如下条件的选择器
    * 第  8个子结点之后，倒数第 5 个子结点之前的li结点  li:nth-child(n+8):nth-last-child(n+5) {}
    * 【类名】以“damiao-”开头的元素           [class^="damiao-"] {}
    * rel 属性中有 nofollow 这个单词的标签    [rel~=nofollow] {}

46. 链接伪类的几种状态书写的顺序是什么？为什么？
  * 链接的伪类书写顺序：link-visited-hover-active
  * 原因：标签拥有 href 属性是显示:link 或者 :visited的前提，
    :active伪类需要放在:hover伪类后面，因为当鼠标点击a标签的时候触发了:active同时也触发了:hover，如果:hover写在:active就会把:active的显示样式给覆盖，就是永远也看不到:active的点击样式
    :visited伪类需要放置在:hover前面，因为如果将:hover放置在:visited之前，:visited触发的链接会一开始就将:hover覆盖。


47. 如下 font 属性的值哪一个是书写正确的？
    font属性的值的正确排列顺序：
    必须包含以下值：<font-size> <font-family>
    font-style, font-variant 和 font-weight 必须在 font-size 之前；
    line-height 必须跟在 font-size 后面，由 "/" 分隔，例如 "16px/3"；
    font-family 必须最后指定；

    * font: serif 24px; 错误 font-family 必须最后指定
    * font: serif bold 24px/1.2;  错误 font-family 必须最后指定
    * font: bold 24px/1.2 serif;  正确

48. 详述你对盒模型的理解。
  * 当你的浏览器展现一个元素时，这个元素会占据一定的空间。这个空间由四部分组成。
    中间是元素呈现内容的区域。这个区域的外面是内边距。再外面是边框。最外面的是外边距，外边距将该元素与其它元素分开。
    内边距，边框和外边距在元素的上、右、下、左都可以有不同的大小。所有这些大小值都可以为0。
  * 盒模型的各个部分：
    * Content box: 这个区域是用来显示内容，大小可以通过设置 width 和 height.
    * Padding box: 包围在内容区域外部的空白区域； 大小通过 padding 相关属性设置。
    * Border box: 边框盒包裹内容和内边距。大小通过 border 相关属性设置。
    * Margin box: 这是最外面的区域，是盒子和其他元素之间的空白区域。大小通过 margin 相关属性设置。
    * 标准模型的宽度、高度=2 x (padding + border) + content box

49. 元素的高度写百分比在什么情况下【无效】，为什么？在什么情况下【有效】，有效时是以哪个元素的高度为基准值？
  * 非定位元素写百分比是无效的。
  * 原因：它的高度会影响父元素，而父元素被它撑高后又会反过来影响它，逻辑上就不成立
  * 定位元素写百分比相对于其定位祖先是有效，以其定位祖先元素的高度为基准值

50. 字体的 italic 与 oblique 的区别是？
  * italic是另一个专门设计好的斜体字体
    * 比如正常字体是 Roboto
      则italic字体可能会是 Roboto Italic，Roboto Cursive
  * 而oblique则是在正体的文字基础上变幻出来的一个斜体字
    * oblique则一般会map到Roboto Slanted，Roboto Incline， Roboto Oblique

51. 什么是模拟信号？什么是数字信号？它们的区别是？
  * 模拟信号（Analog Signal）是指在时域上数学形式为连续函数的讯号。
  * 数字信号是离散时间讯号(Discrete-time signal)的数位化表示。
  * 区别：数字信号采取分立的逻辑值取值只在某些固定的时间点有意义，而模拟信号可以取得连续值。

52. 将如下 markdown 转换成 html
    ```md
    ## 四季变换

    一年有四季，
    四季有其对应的节气

    * 春
        - 立春
        - 惊蛰
        - 元宵
    * 夏
        - **小米**发布会
        - 华为发布会
    * 秋
        - 开学了
        - 军训了
    * 冬
        - 下雪了
            + 打雪仗了
        - 来暖气了
        - 开空调了

    > 知识就是力量，法国就是培根。

    [春](http://baike.baidu.com/item/%E6%98%A5/6983693)
    ![春](https://www.google.com.hk/images/nav_logo242_hr.png)
    ```

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
</head>

<body>
  <h2>四季变换</h2>
  <p>一年有四季，<br>
    四季有其对应的节气</p>
  <h1>春</h1>
  <ul>
    <li>立春</li>
    <li>惊蛰</li>
    <li>元宵</li>
  </ul>
  <h1>夏</h1>
  <ul>
    <li><b>小米</b>发布会</li>
    <li>华为发布会</li>
  </ul>
  <h1>秋</h1>
  <ul>
    <li>开学了</li>
    <li>军训了</li>
  </ul>
  <h1>冬</h1>
  <ul>
    <li>下雪了
      <ul>
        <li>打雪仗了</li>
      </ul>
    </li>
    <li>来暖气了</li>
    <li>开空调了</li>
  </ul>
  <q>知识就是力量，法国就是培根。</q>
  <a href="http://baike.baidu.com/item/%E6%98%A5/6983693">春</a>
  <img src="https://www.google.com.hk/images/nav_logo242_hr.png" alt="春">
</body>

</html>


53. 如下表单提交后将跳转到什么地址
    ```html
    <form action="https://www.baidu.com/s" target="_blank">
      <input type="text" value="bb" name="a">
      <input type="checkbox" name="b" id="b" value="123" checked>
      <input type="checkbox" name="b" id="b" value="456" checked>
      <input type="checkbox" name="b" id="b" value="789">
      <input type="radio" name="c" id="c" value="a2">
      <input type="radio" name="c" id="c" value="a5" checked>
      <input type="radio" name="c" id="c" value="a4">
      <select name="select">
        <option value="01">0001</option>
        <option value="02">0002</option>
        <option value="03" selected>0003</option>
        <option value="04">0004</option>
        <option value="05">0005</option>
      </select>
      <button>提交</button>
    </form>
    ```

54. 列出 input 的 type 有哪些值，以及为各个值时分别需要怎么使用。
  * button：无缺省行为按钮。
  * checkbox： 复选框。必须使用 value 属性定义此控件被提交时的值。使用 checked 属性指示控件是否被选择。也可以使用         indeterminate 指示复选框在一种不确定状态（大多数平台上，显示为一条穿过复选框的水平线）。
  * color：HTML5 用于指定颜色的控件。
  * date：HTML5 用于输入日期的控件（年，月，日，不包括时间）。
  * datetime-local：HTML5 用于输入日期时间控件，不包含时区。
  * email：HTML5 用于编辑 e-mail 的字段。 合适的时候可以使用 :valid 和 :invalid CSS 伪类。
  * file：此控件可以让用户选择文件。使用 accept 属性可以定义控件可以选择的文件类型。
  * hidden：不显示在页面上的控件，但它的值会被提交到服务器。
  * image：图片提交按钮。必须使用 src 属性定义图片的来源及使用 alt 定义替代文本。还可以使用 height 和 width 属性以像素为单位定义图片的大小。
  * month：HTML5 用于输入年月的控件，不带时区。
  * number: HTML5 用于输入浮点数的控件。
  * password：一个值被遮盖的单行文本字段。使用 maxlength 指定可以输入的值的最大长度 。
  * radio：单选按钮。必须使用 value 属性定义此控件被提交时的值。
  * submit：用于提交表单的按钮。
  * tel：HTML5 用于输入电话号码的控件
  * text：单行字段；换行会将自动从输入的值中移除。

55. 想要让一个文本输入框在页面打开后自动获得光标要怎么办？
  * a:focus 光标在input元素里，有tabindex属性的元素点击一下以后

56. 如何在文本框里放置提示性文字？
  * 使用文本框的placeholder属性来解决。占位符
    <input type="text" placeholder="提示性文字">

57. option 标签的主体内容太长影响用户体验，你会如何解决？
  * 将<option>放入<optgroup>标签中

58. 想要在 textarea 标签中默认显示一段 html 代码最安全的做法是什么？
  * 消除<textarea>……</textarea>之间所有多余的空格和换行
  * 或者 "textarea content".replaceAll(" ","&nbsp").replaceAll("\r","<br/>");

59. 如何禁用一组输入框？
  * 使用fieldset 字段组 用来把 一组 输入域 放在一起的；
  * fieldset有个disabled属性，如果它有了这个属性，其内的所有输入域都将被禁用

60. 如下表格渲染出来后是什么效果？不要直接将代码贴入jsbin中看效果
    ```html
    <table border=1>
      <caption>美国队长</caption>
      <col>
      <col bgcolor=red>
      <col>
      <colgroup bgcolor=pink>
        <col>
        <col>
        <col bgcolor=brown>
      </colgroup>
      <thead>
        <tr>
          <th>01</th>
          <th>02</th>
          <th>03</th>
          <th>04</th>
          <th>05</th>
          <th>06</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>abc</td>
          <td colspan=3 rowspan=2>abc</td>
          <td>abc</td>
          <td>abc</td>
        </tr>
        <tr>
          <td>abc</td>
          <td colspan=2 rowspan=3>abc</td>
        </tr>
        <tr bgcolor=lightgreen>
          <td colspan=2 rowspan=2>abc</td>
          <td>abc</td>
          <td>abc</td>
        </tr>
        <tr>
          <td>abc</td>
          <td>abc</td>
        </tr>
      </tbody>
    </table>
    ```
  表格

61. 写出如下标签或属性值的英文全称

    标签：html,div,p,a,em,tr,th,td,col,ul,ol,li,dl,dt,dd,pre,nav

    属性：coord,rect,poly,href,src

  * html：HyperText Markup Language
  * div: division
  * p: parge
  * a: anchor
  * em: element
  * tr: row of cells in a table
  * th: header of a group of table cells
  * td: data cell
  * col: column
  * ul: unorder list
  * ol: order list
  * li: an item in a list
  * dl: description list
  * dt: a term in a description or definition list
  * dd: the description, definition, or value for the preceding term (<dt>) in a description list (<dl>).
  * pre: preformatted text which is to be presented exactly as written in the HTML file
  * nav: navigation

  * coord: Coordinates
  * rect: rectangle
  * poly: Polymorphism
  * href: hyper-references
  * src: source

62. 请说出你对命令行程序的理解，以及其与 GUI 程序的区别
  * CLI - Command Line Interface，命令行界面 , 命令行程序通过输入命令行来运行操作程序
  * GUI - Graphics User Interface，图形化**用户**界面/接口，GUI 程序可以直接通过鼠标键盘的点击输入即可操作程序
  * GUI程序与CLI程序唯一的区别就在于形式不一样

63. 请确认以下标签分别属性什么类别（Content Category）？

    p, meta, h1, fieldset, option, input, area

  * 主内容类: p, meta, h1, area
  * 表单相关的内容类: fieldset, input,
  * 特殊内容类: meta, option

64. 解释 box-sizing 可以取哪些值，以及每个值的意义
  * Content box: 这个区域是用来显示内容，大小可以通过设置 width 和 height.
  * Padding box: 包围在内容区域外部的空白区域； 大小通过 padding 相关属性设置。
  * Border box: 边框盒包裹内容和内边距。大小通过 border 相关属性设置。
  * Margin box: 这是最外面的区域，是盒子和其他元素之间的空白区域。大小通过 margin 相关属性设置。

65. 简述 ie7 市场份额比 ie6 低的原因并在网络上找出目前各大浏览器在中国和全球的市场份额
  * ie7 市场份额比 ie6 低的原因:国内盗版XP系统很多的问题。肯定有很多老机器只能用IE 6，原因就是盗版XP了，因为XP在国内太受欢迎了 ，XP用户现在还是第一大。但事实上你应该懂的，国内估计百分之七八十的XP都是盗版吧，盗版系统直接关闭了系统更新，否则很多IE 6都可以升级到IE7， 8，甚至更高。
  * 2019年6月份浏览器占有率为例。在全球市场范围上，Chrome占有率达到了61.55%，紧随其后的是Safarihe和Firefox。
    在中国市场上，Chrome的占有率第一也达到了惊人的50.56%，UC和Safarihe分别位列第二第三。

66. 画出如下代码中 div 及其子元素的渲染结果，并指出 p 标签中【每个行内元素的，内容区，行内框的范围】，p 元素的行框，并指明理论的行框高度。有尺子的可以以 1mm 为 2px 来绘制。
    ```html
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>JS Bin</title>
      <style>
        p {
          font-size: 20px;
          line-height: 120%;
          margin: 30px;
          margin-left: auto;
          margin-right: -20px;
          width: 300px;
          background-color: tan;
        }

        .a {
          display: inline-block;
        }

        .b {
          font-size: 30px;
          vertical-align: 15px;
        }

        .c {
          display: inline-block;
          width: 60px;
          height: 60px;
          background-color: pink;
          margin: 8px;
        }

        img {
          box-sizing: border-box;
          width: 50px;
          height: 50px;
          border: 2px solid;
          margin: 4px;
          vertical-align: -10px;
          margin-bottom: -5px;
        }
        div {
          width: 400px;
          border: 1px dotted;
        }
      </style>
    </head>
    <body>
      <div>
        <p>
          <span class=a>foo</span>
          <span class=b>bar</span>
          <span class=c></span>
          <img src="https://drscdn.500px.org/photo/205228769/m%3D1170_k%3D1/d721302d063d447aa3bd6301dc1cba87" alt="">
        </p>
      </div>
    </body>
    </html>
    ```
